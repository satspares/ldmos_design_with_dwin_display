; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; chip erase if needed eg. avrdude -c jtag2updi -P /dev/ttyUSB0 -e -p m4808

[platformio]
; Default build target
default_envs = UPDI
[env]
platform = atmelmegaavr
framework = arduino
board = ATmega4808
;16000000L needs board_fuses.osccfg = 0x01
;board_build.f_cpu = 16000000L
;20000000L needs board_fuses.osccfg = 0x02
;board_build.f_cpu = 20000000L 
board_build.f_cpu = 16000000L 
monitor_speed = 115200
board_build.variant = nano-4808
; map file in the build/UPDI directory
build_flags = -Wl,-Map,${BUILD_DIR}/atmega4808.map

[env:UPDI]  
; Upload protocol for UPDI upload
; upload_protocol = serialupdi
upload_protocol = jtag2updi
;upload_port = /dev/ttyUSB0
;upload_port = com12 ;etc.
; upload_speed = 115200 ; 115200 460800 230400 serialupdi
;board_upload.use_1200bps_touch = yes

; only from command line at the moment eg. from folder where platformio.ini is...
; platformio run -e fuses_bootloader -t fuses
[env:fuses_bootloader]
extends = env:UPDI
; Hardware settings
board_hardware.bod = 2.7v
board_hardware.eesave = yes
board_hardware.uart = no_bootloader
board_hardware.rstpin = gpio ;gpio or reset
;board_fuses.osccfg = 0x02
board_fuses.osccfg = 0x01
;board_fuses.syscfg0 = 0xC9
board_hardware.oscillator = internal